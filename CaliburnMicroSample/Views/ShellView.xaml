<kx:Window2D 
    x:Class="CaliburnMicroSample.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cal="http://www.caliburnproject.org"
    xmlns:kx="clr-namespace:KXControls;assembly=KXControls"
    xmlns:v="clr-namespace:CaliburnMicroSample.Views"
    mc:Ignorable="d"
    WindowStartupLocation="CenterScreen"
    Icon="../favicon.ico"
    MinWidth="640" MinHeight="360"
    Width="960" Height="540" 
    cal:Message.Attach="[Key Enter] = [Action ConductorWindow];
    [Gesture Ctrl+Alt+X] = [Action AppExit];
    [Event SizeChanged] = [Action ShellSizeChanged($source, $eventArgs)];
    [Event LocationChanged] = [Action ShellSizeChanged($source, $eventArgs)];">
    
    <kx:Window2D.Title>
        <Binding Source="{StaticResource Strings}" XPath="string[@key='AppName']" />
    </kx:Window2D.Title>

    <Grid>
        <Grid.Resources>
            <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="FontFamily" Value="pack://application:,,,/Resources/Fonts/#Font Awesome 5 Free Regular" />
                <Setter Property="Width" Value="48" />
                <Setter Property="Height" Value="48" />
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="DeepSkyBlue" />
                <Setter Property="Margin" Value="1" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="RootBorder"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="ContentPresenter" 
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="RootBorder" Property="Background" Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="RootBorder" Property="Background" Value="LightSkyBlue" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="RootBorder" Property="Background" Value="Orange" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="MinHeight" Value="24" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="5 2" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="LayoutRoot"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter x:Name="ContentPresenter" 
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="Gray" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="LightSkyBlue" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="LayoutRoot" Property="Background" Value="SkyBlue" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0">
            <Button x:Name="GoBack" 
                    Style="{StaticResource IconButtonStyle}" 
                    FontFamily="pack://application:,,,/Resources/Fonts/#Font Awesome 5 Free Solid"
                    Content="&#xF060;"
                    DockPanel.Dock="Left">
                <!-- if use xaml resource -->
                <!-- ToolTip="{DynamicResource GoBack}" -->
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='GoBack']" />
                </Button.ToolTip>
            </Button>
            <Button Style="{StaticResource IconButtonStyle}"
                    Content="&#xF07C;" 
                    DockPanel.Dock="Left"
                    cal:Message.Attach="[Event Click]=[Action OpenFile]">
                <!-- ToolTip="{DynamicResource OpenFile}" -->
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='OpenFile']" />
                </Button.ToolTip>
            </Button>
            <Button Style="{StaticResource IconButtonStyle}"
                    Content="&#xF0C7;" 
                    DockPanel.Dock="Left"
                    cal:Message.Attach="[Event Click]=[Action SaveFile]">
                <!-- ToolTip="{DynamicResource SaveFile}" -->
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='SaveFile']" />
                </Button.ToolTip>
            </Button>
            <Button x:Name="ConductorWindow" 
                    Style="{StaticResource IconButtonStyle}" 
                    Content="&#xF2D2;"
                    DockPanel.Dock="Left">
                <!-- ToolTip="{DynamicResource NewWindow}" -->
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='ConductorWindow']" />
                </Button.ToolTip>
            </Button>

            <Button x:Name="WinMsgWindow"
                    Style="{StaticResource IconButtonStyle}"
                    Content="&#xF086;"
                    DockPanel.Dock="Left">
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='MsgApiWindow']" />
                </Button.ToolTip>
            </Button>
            
            <Button x:Name="SampleWindow"
                    Style="{StaticResource IconButtonStyle}"
                    Content="&#xF094;"
                    DockPanel.Dock="Left">
                <Button.ToolTip>
                    <Binding Source="{StaticResource Strings}" XPath="string[@key='SampleWindow']" />
                </Button.ToolTip>
            </Button>

            <Button x:Name="MenuButton" 
                    Style="{StaticResource IconButtonStyle}"
                    FontFamily="pack://application:,,,/Resources/Fonts/#Font Awesome 5 Free Solid"
                    Content="&#xF0C9;"
                    DockPanel.Dock="Right" 
                    Click="MenuButton_Click" />
            <!-- XAML 中嵌入代码
                 这里仅作测试，实际上不提倡这样做
            -->
            <x:Code>
                <![CDATA[
                void MenuButton_Click(object s, RoutedEventArgs e)
                {
                    MenuPopup.IsOpen = !MenuPopup.IsOpen;
                }
                ]]>
            </x:Code>
            <Popup x:Name="MenuPopup" 
                   PlacementTarget="{Binding ElementName=MenuButton}"
                   Placement="Mouse"
                   StaysOpen="False"
                   Focusable="False"
                   MinWidth="100"
                   AllowsTransparency="True"
                   PopupAnimation="Fade">
                <Grid>
                    <Border Background="White" 
                            BorderThickness="2"
                            Padding="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 1" Opacity="1.0">
                                <LinearGradientBrush.GradientStops>
                                    <GradientStop Offset="0" Color="DeepSkyBlue" />
                                    <GradientStop Offset="0.5" Color="MediumVioletRed" />
                                    <GradientStop Offset="1" Color="Orange" />
                                </LinearGradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <StackPanel>
                            <Button Style="{StaticResource MenuButtonStyle}" 
                                    cal:Message.Attach="[Event Click]=[Action NavToSettings]">
                                <!-- Content="{DynamicResource Settings}"  -->
                                <Button.Content>
                                    <Binding Source="{StaticResource Strings}" XPath="string[@key='Settings']" />
                                </Button.Content>
                            </Button>
                            <Separator />
                            <Button Style="{StaticResource MenuButtonStyle}" 
                                    cal:Message.Attach="[Event Click]=[Action AppExit]">
                                <!-- Content="{DynamicResource AppExit}"  -->
                                <Button.Content>
                                    <Binding Source="{StaticResource Strings}" XPath="string[@key='AppExit']" />
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </Popup>
            
            <Grid />
        </DockPanel>
        <Frame Grid.Row="1" 
               NavigationUIVisibility="Hidden" 
               cal:Message.Attach="RegisterFrame($source)" 
               DataContext="{x:Null}" />
    </Grid>
</kx:Window2D>
